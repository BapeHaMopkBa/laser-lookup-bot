# lookup_bot_multi.py

import os
import telebot
from telebot.apihelper import ApiTelegramException
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# ‚Äî‚Äî‚Äî‚Äî‚Äî –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ‚Äî‚Äî‚Äî‚Äî‚Äî
API_TOKEN      = '8152936119:AAEW50jhOGR5q0JMPiKDM50FztJ5tuqD2ZY'
SPREADSHEET_ID = '19VYkNmFJCArLFDngYLkpkxF0LYqvDz78yF1oqLT7Ukw'
CREDS_FILE     = 'micro-edge-457711-t2-760a03863d1d.json'
EMBLEM_DIR     = 'emblems'  # –ø–∞–ø–∫–∞ –∑ –µ–º–±–ª–µ–º–∞–º–∏

# chat_id –≥—Ä—É–ø ‚Üí –∞—Ä–∫—É—à Google Sheets
GROUP_SHEETS = {
    -1001499325758: 'kids',
    -1001688878644: 'sundaygames',
}
# ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî

bot = telebot.TeleBot(API_TOKEN)

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Google Sheets
scope = [
    'https://spreadsheets.google.com/feeds',
    'https://www.googleapis.com/auth/drive'
]
creds = ServiceAccountCredentials.from_json_keyfile_name(CREDS_FILE, scope)
gc    = gspread.authorize(creds)
sh    = gc.open_by_key(SPREADSHEET_ID)

# –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –∫–æ–∂–Ω–æ—ó –≥—Ä—É–ø–∏
data_maps = {}
places    = {}
for chat_id, sheet_name in GROUP_SHEETS.items():
    ws     = sh.worksheet(sheet_name)
    rows   = ws.get_all_values()
    header = [h.strip() for h in rows[0]]
    # –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–∑–≤ –∫–æ–ª–æ–Ω–æ–∫
    try:
        nick_i   = header.index('Nickname')
        points_i = header.index('Points')
    except ValueError:
        raise RuntimeError(f"–£ –∞—Ä–∫—É—à—ñ '{sheet_name}' –º–∞—é—Ç—å –±—É—Ç–∏ –∫–æ–ª–æ–Ω–∫–∏ 'Nickname' —Ç–∞ 'Points'.")

    dm       = {}
    pts_list = []
    for row in rows[1:]:
        nick = row[nick_i].strip()
        if not nick:
            continue
        try:
            pts = int(row[points_i])
        except:
            pts = 0
        dm[nick.lower()] = pts
        pts_list.append(pts)

    pts_list.sort(reverse=True)
    data_maps[chat_id] = dm
    places[chat_id]    = pts_list

print("‚úÖ Loaded GROUP_SHEETS:", GROUP_SHEETS)

# /start
@bot.message_handler(commands=['start'])
def cmd_start(msg):
    if msg.chat.type in ['group', 'supergroup']:
        bot.reply_to(
            msg,
            "‚ùó –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–≤—ñ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–∞–ø–∏—à–∏ –º–µ–Ω—ñ –≤ –æ—Å–æ–±–∏—Å—Ç—ñ: t.me/–ü–µ—Ç—Ä–æ —Ç–∞ –Ω–∞—Ç–∏—Å–Ω–∏ /start"
        )
    else:
        bot.send_message(
            msg.chat.id,
            "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–¥—ñ—à–ª–∏ —Å–≤—ñ–π –Ω—ñ–∫–Ω–µ–π–º ‚Äî —ñ —è —Å–∫–∞–∂—É, —Å–∫—ñ–ª—å–∫–∏ —É —Ç–µ–±–µ –æ—á–æ–∫, —Ç–≤—ñ–π —Ä–∞–Ω–≥ —Ç–∞ –º—ñ—Å—Ü–µ –≤ —Ç–∞–±–ª–∏—Ü—ñ."
        )

# –û—Å–Ω–æ–≤–Ω–∏–π —Ö–µ–Ω–¥–ª–µ—Ä
@bot.message_handler(func=lambda m: True, content_types=['text'])
def find_score(m):
    # —ñ–≥–Ω–æ—Ä—É—î–º–æ slash-–∫–æ–º–∞–Ω–¥–∏
    if m.text.startswith('/'):
        return

    cid = m.chat.id
    if cid not in data_maps:
        return

    nick = m.text.strip()
    key  = nick.lower()
    dm   = data_maps[cid]

    if key in dm:
        pts      = dm[key]
        pts_list = places[cid]
        total    = len(pts_list)
        place    = pts_list.index(pts) + 1

        # –≤–∏–±—ñ—Ä —Ä–∞–Ω–≥—É —Ç–∞ –µ–º–±–ª–µ–º–∏
        if pts < 200:
            emblem_file = 'd_rank.png'
            rank_name   = 'D-—Ä–∞–Ω–≥ (0‚Äì199) ‚Äî –ù–æ–≤–∞—á–æ–∫, —Å–≤—ñ–∂–∞ –∫—Ä–æ–≤ - –Ω—É–±–∞—Å—ñ–∫. –ì—Ä–∞–π –±—ñ–ª—å—à–µ!'
        elif pts < 500:
            emblem_file = 'c_rank.png'
            rank_name   = 'C-—Ä–∞–Ω–≥ (200‚Äì499) ‚Äî –í–∏–¥–Ω–æ, —â–æ –¢–∏ —á–∞—Å—Ç–æ –≥—Ä–∞—î—à. –ß–∞—Å—Ç–æ ‚â† –≤–º—ñ—î—à. –¢—Ä–µ–Ω—É–π—Å—è!'
        elif pts < 800:
            emblem_file = 'b_rank.png'
            rank_name   = 'B-—Ä–∞–Ω–≥ (500‚Äì799) ‚Äî –û–æ–æ–æ, –±–∞—á—É –¢–∏ –≤–∏—Ä–≤–∞–≤—Å—è –≤ –ª—é–¥–∏. –ú–æ—è –ø–æ–≤–∞–≥–∞!'
        elif pts < 1200:
            emblem_file = 'a_rank.png'
            rank_name   = 'A-—Ä–∞–Ω–≥ (800‚Äì1199) ‚Äî –ß–∏ –º–æ–∂—É —è –í–∞—Å –±–ª–∞–≥–∞—Ç–∏ —Å—Ç–∞—Ç–∏ –º–æ—ó–º —Å–µ–Ω—Å–µ—î–º?'
        else:
            emblem_file = 's_rank.png'
            rank_name   = 'S-—Ä–∞–Ω–≥ (1200+) ‚Äî –í–∏ ‚Äî —Å–ø—Ä–∞–≤–∂–Ω—è –õ–ï–ì–ï–ù–î–ê!'

        caption = (
            f"‚úÖ {nick} –º–∞—î {pts} –æ—á–æ–∫ (–º—ñ—Å—Ü–µ {place} –∑ {total}).\n"
            f"{rank_name}"
        )
        emblem_path = os.path.join(EMBLEM_DIR, emblem_file)

        # –≤ –≥—Ä—É–ø—ñ: –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –≤ –ø—Ä–∏–≤–∞—Ç
        if m.chat.type in ['group', 'supergroup']:
            try:
                bot.delete_message(cid, m.message_id)
            except:
                pass

            with open(emblem_path, 'rb') as img:
                try:
                    bot.send_photo(m.from_user.id, img, caption=caption)
                except ApiTelegramException as e:
                    if "bot can't initiate conversation" in str(e):
                        bot.send_message(
                            cid,
                            "‚ùó –©–æ–± —è –∑–º—ñ–≥ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–æ–±—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –≤—ñ–¥–∫—Ä–∏–π –º—ñ–π –ø—Ä–∏–≤–∞—Ç–Ω–∏–π —á–∞—Ç —ñ –Ω–∞—Ç–∏—Å–Ω–∏ /start: t.me/–ü–µ—Ç—Ä–æ"
                        )
                    else:
                        raise
        else:
            # –≤ –æ—Å–æ–±–∏—Å—Ç–æ–º—É —á–∞—Ç—ñ
            with open(emblem_path, 'rb') as img:
                bot.send_photo(cid, img, caption=caption)

    else:
        # –≥—Ä–∞–≤—Ü—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
        try:
            bot.delete_message(cid, m.message_id)
        except:
            pass
        bot.send_message(m.from_user.id, f'‚ùå –ì—Ä–∞–≤—Ü—è "{nick}" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.')

# if __name__ == '__main__':
#    print("üöÄ Lookup-–±–æ—Ç (multi-group) –∑–∞–ø—É—â–µ–Ω–æ‚Ä¶")
#    bot.polling(none_stop=True)
